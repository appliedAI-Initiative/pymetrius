name: Upload Python Package

on:
  release:
    types: [created]

jobs:
  deploy:
    runs-on: ubuntu-latest
    steps:
      - uses: actions/checkout@v2
      - name: Set up Python
        uses: actions/setup-python@v1
        with:
          python-version: {{cookiecutter.python_version}}
          
      {% if cookiecutter.package_manager == "poetry" %}
      - name: Install poetry
        uses: abatilo/actions-poetry@v2
      - name: Setup a local virtual environment (if no poetry.toml file)
        run: |
          poetry config virtualenvs.create true --local
          poetry config virtualenvs.in-project true --local
      - name: Build and publish
        env:
          {% raw -%}
          PYPI_TOKEN: ${{ secrets.PYPI_TOKEN }}
          {%- endraw %}
        run: |
          if [ -z "${PYPI_TOKEN}" ]; then echo "Set the PYPI_TOKEN variable in your repository secrets"; exit 1; fi  
          poetry config pypi-token.pypi $PYPI_TOKEN
          poetry config repositories.pypi https://pypi.org/legacy
          poetry publish --build --repository pypi
      {% elif cookiecutter.package_manager == "uv" %}
      - name: Install build and twine
        run: pip install build twine
      - name: Build and publish
        env:
          {% raw -%}
          PYPI_TOKEN: ${{ secrets.PYPI_TOKEN }}
          {%- endraw %}
        run: |
          if [ -z "${PYPI_TOKEN}" ]; then echo "Set the PYPI_TOKEN variable in your repository secrets"; exit 1; fi
          python -m build
          python -m twine upload dist/* --username __token__ --password $PYPI_TOKEN
      {% elif cookiecutter.package_manager == "pixi" %}
      - name: Install pixi
        uses: prefix-dev/setup-pixi@v0.4.1
        with:
          pixi-version: v0.7.0
      - name: Install build and twine
        run: pip install build twine
      - name: Build and publish
        env:
          {% raw -%}
          PYPI_TOKEN: ${{ secrets.PYPI_TOKEN }}
          {%- endraw %}
        run: |
          if [ -z "${PYPI_TOKEN}" ]; then echo "Set the PYPI_TOKEN variable in your repository secrets"; exit 1; fi
          python -m build
          python -m twine upload dist/* --username __token__ --password $PYPI_TOKEN
      {% endif %}
