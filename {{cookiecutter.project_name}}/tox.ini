[tox]
envlist = py38, docs, linting, report
isolated_build = True

[pytest]
# this runs the tests in multiple processes but unfortunately prevents logs in tests from being displayed
# https://github.com/pytest-dev/pytest-xdist/issues/402
# one does not always benefit from the parallelization of all tests. Uncomment the following line if you want
# to enable multiprocess-parallelization
;addopts = -n auto --dist=loadfile

[testenv]
# pytest-cov has an issue when the tests are inside an sdist, as created by tox by default
# despite tests being run, coverage discovers no data, leading to: Coverage.py warning: No data was collected
# this issue is resolved by running pytest-cov within tox development mode, thus not creating an sdist
usedevelop = true
commands =
    coverage erase
    pytest --cov --cov-append --cov-report=term-missing tests
    pytest -n -1 notebooks
deps =
    -rrequirements-test.txt
    -rrequirements.txt
whitelist_externals =
    coverage
    pytest

[testenv:linting]
skip_install = true
setenv =
    PYLINTHOME = .pylint.d
commands =
    bash build_scripts/build-linting-report.sh
deps =
    -rrequirements-linting.txt
whitelist_externals =
    bash

[testenv:docs]
; NOTE: we don't use pytest for running the doctest, even though with pytest no imports have to be written in them
; The reason is that we want to be running doctest during the docs build (which might happen on a remote machine,
; like read_the_docs does) with possibly fewer external dependencies and use sphinx' ability to automock the missing ones.
commands =
    bash build_scripts/build-docs.sh
deps =
    -rrequirements-docs.txt
whitelist_externals =
    bash

[testenv:report]
skip_install = true
commands =
    bash build_scripts/build-coverage-report.sh
deps =
    -rrequirements-coverage.txt
whitelist_externals =
    bash

